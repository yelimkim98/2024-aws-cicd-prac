name: AWS CI CD
on:
  push:
    branches: ["main"]
permissions:
  id-token: write
  contents: read
env:
  ECR_REPOSITORY: '2024-aws-cicd'
  AWS_REGION: 'ap-northeast-2'
  ECS_CLUSTER: 'yerim-test'
  ECS_SERVICE: '2024-aws-cicd-service'
  CONTAINER_NAME: '2024-aws-cicd-test'
  ECS)TASK)DEFINITION: './task-definition.json'

jobs:
  build-docker-image:
    runs-on: 'ubuntu-22.04'
    steps:
      - uses: 'actions/checkout@v4'
      - name: 'Set Up JDK 17'
        uses: 'actions/setup-java@v4'
        with:
          distribution: 'corretto'
          java-version: 17
      - name: 'Build with Gradle'
        uses: 'gradle/gradle-build-action@v3'
        with:
          arguments: 'clean bootJar'

      # AWS 로그인
      - name: 'Config AWS Credentials'
        id: 'aws-login'
        uses: 'aws-actions/configure-aws-credentials@v4'
        with:
          role-to-assume: 'arn:aws:iam::484907495106:role/github-aws-role'
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Login to Amazon ECR'
        id: 'login-ecr'
        uses: 'aws-actions/amazon-ecr-login@v2'

      - name: 'Build and Push Image to AWS ECR'
        id: 'build-image'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Task 수정
      - name: 'Fill in the new image ID in the Amazon ECS Task Definition'
        id: 'task-def'
        uses: 'aws-actions/amazon-ecs-render-task-definition@v1'
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      # ECS에 Task 배포
      - name: 'Deploy Amazon ECS Task Definition'
        uses: 'aws-actions/amazon-ecs-deploy-task-definition@v2'
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true